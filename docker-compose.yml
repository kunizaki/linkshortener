services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: ${NODE_ENV}
      VITE_API_URL: ${VITE_API_URL}
    volumes:
      - ./web:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - app_network
    command: npm run dev -- --host

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3333:3333"
    environment:
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - db
    networks:
      - app_network
    command: >
      sh -c "
        until pg_isready -h db -p 5432 -U $POSTGRES_USER;
        do echo 'Aguardando PostgreSQL ficar dispon√≠vel...';
        sleep 2;
        done &&
        npx drizzle-kit push &&
        npm run dev
      "

  db:
    image: bitnami/postgresql:latest
    container_name: postgres_container
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRESQL_USERNAME: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_DATABASE: ${POSTGRES_DB}
      POSTGRESQL_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - './docker:/docker-entrypoint-initdb.d'
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
